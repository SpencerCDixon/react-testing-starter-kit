Upgrade react-testing-starter-kit to React 15, Enzyme 2.3.0

Notes:

  Karma runs all tests in about 4 seconds in watch mode.
  Karma supports DOM manipulation, webpack builds and a variety of real browsers

  Mocha-webpack runs tests for changed files only, in about 1 second in watch mode.
  Mocha-webpack supports webpack-builds.

  Mocha runs all tests in less than 1 second in watch mode.
  Mocha does not support DOM manipulation of module directories.

Test commands:
  npm test: run Karma single execution

  npm run test-karma: run karma single execution
  npm run test-karma-watch: run karma in watch mode

  npm run test-mocha-webpack:  run mocha-webpack single execution
  npm run test-mocha-webpack-watch:  run mocha-webpack in watch mode

  npm run test-mocha: run Mocha single execution
  npm run test-mocha-watch run Mocha in watch mode

Update dependencies to latest versions:
e.g.  $ npm install --save-dev enzyme@*
etc.

  enzyme:				2.3.0
  karma-mocha:			1.0.1
  karma-phantomjs-launcher:	1.0.0
  karma-spec-reporter:		0.0.26
  phantomjs-polyfill:		0.0.2
  react:				15.1.0
  react-addons-test-utils:	15.1.0
  react-dom:			15.1.0
  yargs:				4.7.1
  mocha:				2.5.3
  chai:				3.5.0
  sinon:				1.17.4

Remove
  phantomjs:

Install:
  jsdom: 9.2.0
  phantomjs-prebuilt:   2.1.7
  karma-chai: 0.1.0
  mocha-webpack: 0.3.1

eslintrc options:
from https://github.com/erikthedeveloper/example-react-app-react-mail/blob/master/tests/.eslintrc

{
  "env": {
    "mocha": true
  }
}

Configure mocha:
  https://github.com/erikthedeveloper/example-react-app-react-mail/blob/master/test/mocha.opts

  --compilers js:babel-core/register

Configure Karma:
  https://github.com/airbnb/enzyme/blob/master/docs/guides/karma.md

Configure webpack:
  https://github.com/airbnb/enzyme/blob/master/docs/guides/webpack.md#react-15-compatability

Configure mocha-webpack
  https://github.com/zinserjan/mocha-webpack

Writing tests:
-------------

Using Enzyme shallow mode:
  see: http://airbnb.io/enzyme/docs/api/shallow.html

Starter test template
---
describe('Hello World', () => {
  it('Works!', () => {
    expect(true).to.be.true;
  })
});
---

Run mocha:
	mocha --compilers js:babel-core/register --require ./test/test_helper.js --recursive --watch

tip:
---
Flesh out tests to be run, even before writing complete test code. Just write
minimal 'it' blocks with message only:

	it('what ever message describes the test to be written);
e.g.
  'links back to the message listing "search" page'
	'indicates whether the message is "flagged"'
	'toggles the :flagged" status when flag button is clicked'
	'deletes itself when the "delete" button is clicked'
etc.

These will run and appear as 'pending'

A completed test using enzyme
---
import React from 'react';
import { shallow } from 'enzyme';
import Root from '../../src/containers/Root';

describe('(Container) Root', () => {
  const wrapper = shallow(<Root />);

  it('renders as a <div>', () => {
    expect(wrapper.type()).to.equal('div');
  });

  it('has style with height 100%, background #99f', () => {
    const expectedStyles = {
      height: '100%',
      background: '#99f'
    }
    expect(wrapper.prop('style')).to.eql(expectedStyles);
  });

  it('contains a header explaining the app', () => {
    expect(wrapper.find('.welcome-header')).to.have.length(1);
  });
});
---
